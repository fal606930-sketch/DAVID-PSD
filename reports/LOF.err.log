Traceback (most recent call last):
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nabil\AppData\Roaming\Python\Python312\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\nabil\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.neighbors import LocalOutlierFactor

# 1. Data: Nama, Berat Badan (BB), Tinggi Badan (TB dalam meter)
data = {
    "Nama": ["Dicky", "Sung Jin Woo", "Beru", "Igris", "Bellion", "Kamish", "Kaisel", "Antares", "Tusk", "Cha Hae In"],
    "BB": [70, 70, 71, 69, 72, 71, 72, 71, 120, 150],   # Berat Badan (kg)
    "TB": [1.80, 1.85, 1.90, 1.87, 1.90, 1.88, 1.87, 1.90, 9.99, 7.77]   # Tinggi Badan (meter)
}

df = pd.DataFrame(data)

# 2. Menyiapkan data untuk LOF (hanya BB dan TB)
X = df[["BB", "TB"]]

# 3. Inisialisasi dan fit model LOF dengan k = 3
lof = LocalOutlierFactor(n_neighbors=3)
lof_scores = lof.fit_predict(X)  # -1 berarti outlier, 1 berarti normal
lof_factors = -lof.negative_outlier_factor_  # Nilai LOF (semakin tinggi = outlier)

# 4. Menambahkan hasil LOF ke dataframe
df["LOF_Score"] = lof_factors
df["Outlier"] = np.where(lof_scores == -1, "Outlier", "Normal")

# 5. Menampilkan hasil dalam tabel
print(df.sort_values(by="LOF_Score", ascending=False))

# 6. Visualisasi data dengan scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="BB", y="TB", hue="Outlier", size="LOF_Score",
                sizes=(50, 300), palette={"Normal": "blue", "Outlier": "red"}, edgecolor="black")

# Menandai setiap titik dengan nama
for i in range(len(df)):
    plt.text(df["BB"][i] + 0.5, df["TB"][i], df["Nama"][i], fontsize=12, ha='left')

plt.xlabel("Berat Badan (kg)")
plt.ylabel("Tinggi Badan (m)")
plt.title("Visualisasi LOF: Outlier vs Normal Data")
plt.legend()
plt.grid(True)
plt.show()

------------------


[1;31m------------------------------------------------[0m
[1;31mModuleNotFoundError[0mTraceback (most recent call last)
Cell [1;32mIn[1], line 4[0m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m----> 4[0m [38;5;28;01mimport[39;00m [38;5;21;01mseaborn[39;00m [38;5;28;01mas[39;00m [38;5;21;01msns[39;00m
[0;32m      5[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mneighbors[39;00m [38;5;28;01mimport[39;00m LocalOutlierFactor
[0;32m      7[0m [38;5;66;03m# 1. Data: Nama, Berat Badan (BB), Tinggi Badan (TB dalam meter)[39;00m

[1;31mModuleNotFoundError[0m: No module named 'seaborn'

